version: "3.6"

#Liste des servies
services:
  #Le service GitLAb
  gitlab:
    image: gitlab/gitlab-ce
    hostname: 'gitlab.lugar.com'
    ports:
      - "8443:443" #Accès par HTTPS
      - "4000:80" #Accès par HTTP
      - "22" #Accès par SSH
    container_name: gitlab
    volumes:
      - ./gitlab_data/data:/var/opt/gitlab
      - ./gitlab_data/log:/var/log/gitlab
      - ./gitlab_data/config:/etc/gitlab
      #- ./gitlab_data/registry/certs:/certs
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        gitlab_rails['gitlab_shell_ssh_port'] = 22
#        external_url 'https://gitlab.example.com'       # Change url here
#        nginx['listen_port'] = 80
#        nginx['listen_https'] = false
#        nginx['proxy_set_headers'] = {
#          "X-Forwarded-Proto" => "https",
#          "X-Forwarded-Ssl" => "on"
#        }
#        # DATABASE CONNECTION SETTINGS: in our case we use postgresql as database
#        gitlab_rails['db_adapter'] = "postgresql"
#        gitlab_rails['db_database'] = "gitlab"
#        gitlab_rails['db_username'] = "postgres"
#        gitlab_rails['db_password'] = "CHANGE_TO_RANDOM_PASSWORD" # set the database password here
#        gitlab_rails['db_host'] = "gitlab_database"
#
#        # GITLAB DOCKER IMAGE REGISTRY: so that we can use our docker image registry with gitlab
#        registry['enable'] = false # we do not activate this option because we provide our own registry
#        gitlab_rails['registry_enabled'] = true
#        gitlab_rails['registry_host'] = "registry.gitlab.example.com"                       # Change registry host here
#        gitlab_rails['registry_api_url'] = "https://registry.gitlab.example.com"            # Change registry url here
#        gitlab_rails['registry_issuer'] = "gitlab-issuer"
#
#        # SMTP SETTINGS: So that gitlab can send emails. In our case we send via google mail.
#        gitlab_rails['smtp_enable'] = true
#        gitlab_rails['smtp_address'] = "smtp.gmail.com"
#        gitlab_rails['smtp_port'] = 587
#        gitlab_rails['smtp_user_name'] = "gitlab@example.com"
#        gitlab_rails['smtp_password'] = "xxxx"
#        gitlab_rails['smtp_domain'] = "smtp.gmail.com"
#        gitlab_rails['smtp_authentication'] = "login"
#        gitlab_rails['smtp_enable_starttls_auto'] = true
#        gitlab_rails['smtp_tls'] = false
#        gitlab_rails['smtp_openssl_verify_mode'] = "peer"
    env_file:
      - .env
#    labels:
#      - "traefik.enable=true"
#      - "traefik.gitlab.port=80"
#      - "traefik.gitlab.backend=gitlab"
#      - "traefik.gitlab.frontend.rule=Host:gitlab.example.com"      # Change host here
#      - "traefik.gitlab.frontend.entryPoints=http,https"
#      - "traefik.docker.network=gitlab_traefik_gitlab_net"
    networks:
      net_backend:
        ipv4_address: 172.21.0.2
        aliases:
          - gitlab
    restart: unless-stopped

  gitlab-database:
    image: postgres
    container_name: gitlab_database
    restart: unless-stopped
    net_backend:
      ipv4_address: 172.21.0.18
      aliases:
        - gitlab-database
    environment:
      POSTGRES_USER: "Lugar"
      POSTGRES_PASSWORD: "Lugar2020"
      POSTGRES_DB: gitlab
    volumes:
      - /srv/docker/volumes/gitlab/database:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8085:8080
    net_backend:
      ipv4_address: 172.21.0.22
      aliases:
        - adminier

  mysql-server-4:
    image: mysql
    command:
      - mysqld
      - --character-set-server=utf8
      - --collation-server=utf8_bin
      - --default-authentication-plugin=mysql_native_password
    #   - --require-secure-transport
    #   - --ssl-ca=/run/secrets/root-ca.pem
    #   - --ssl-cert=/run/secrets/server-cert.pem
    #   - --ssl-key=/run/secrets/server-key.pem
    volumes:
      - "./mysql_data_gitlab/var/lib/mysql:/var/lib/mysql:rw"
    env_file:
      - .env_mysql
    container_name: mysql-server-4
    ports:
      - "3306:3306"
    #secrets:
    #   - server-key.pem
    #   - server-cert.pem
    #   - root-ca.pem
    #  stop_grace_period: 1m
    networks:
      net_backend:
        ipv4_address: 172.21.0.16
        aliases:
          - mysql-server-4
    tty: true
    #Cette ligne permet de résoudre le probleme de mbind: Operation not permitted
    security_opt:
      - seccomp:unconfined
    restart: unless-stopped

  phpmyadmin-4:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8084:80"
    container_name: phpmyadmin-4
    env_file:
      - .env_mysql
    restart: unless-stopped
    tty: true
    links:
      - "mysql-server-4"
    volumes:
      - "./phpmyadmin/session:/sessions"
      #- "./phpmyadmin/php_ini:/usr/local/etc/php"
      #- "./phpmyadmin/apache2_config:/etc/apache2"
    networks:
      net_backend:
        ipv4_address: 172.21.0.17
        aliases:
          - phpmyadmin-4
    environment:
      PMA_HOST: "mysql-server-4" # mysql-server

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    volumes:
      - ./gitlab_data/srv/gitlab-runner/config:/etc/gitlab-runner
      - ./gitlab_data/var/run/docker.sock:/var/run/docker.sock
    networks:
      net_backend:
        ipv4_address: 172.21.0.18
        aliases:
          - gitlab-runner
    restart: unless-stopped
    tty: true
    depends_on:
      - gitlab
networks:
  net_backend:
    external:
      name: lugar_net_backend